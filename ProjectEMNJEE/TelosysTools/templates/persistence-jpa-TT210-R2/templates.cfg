#---------------------------------------------------------
# Templates configuration file
# Values separated by ";"
# . value 1 : the label
# . value 2 : the file to be generated ( var allowed : ${BEANNAME}, ${BEANNAME_UC}, ${BEANNAME_LC} )
# . value 3 : the project folder where to generate ( var allowed : ${BEANNAME}, ${BEANNAME_UC}, ${BEANNAME_LC} )
# . value 4 : the template to use
# . value 5 : number of execution : "1" for "ONCE" for all entities, default is multiple executions ( executed for each entity )
#---------------------------------------------------------
# Since v 2.0 the project's variables can be used in file and folder name
#---------------------------------------------------------

# Maven
pom.xml                              ; pom_persistence.xml                  ;                                 ; maven/pom_persistence_xml.vm               ; 1
pom_dependencies_persistence.txt     ; pom_dependencies_persistence.txt     ;                                 ; maven/pom_dependencies_persistence_txt.vm  ; 1
pom_dependencies_common.txt          ; pom_dependencies_common.txt          ;                                 ; maven/pom_dependencies_common_txt.vm       ; 1

# Entities classes ( with composite key classes if any )
JPA entity (with links)        ; ${BEANNAME}Entity.java             ; ${SRC}/${ENTITY_PKG}/jpa              ; jpa_bean_with_links.vm    ; *

Entity mock tool               ; ${BEANNAME}EntityMock.java         ; ${SRC}/${ROOT_PKG}/mock           ; bean_mock.vm    ; *

# Entities persistence services classes
Persistence service interface   ; ${BEANNAME}Persistence.java    ; ${SRC}/${ROOT_PKG}/persistence/services     ; persistence_service.vm      ; *
Persistence service implem. JPA ; ${BEANNAME}PersistenceJPA.java ; ${SRC}/${ROOT_PKG}/persistence/services/jpa ; persistence_service_jpa.vm  ; *
Persistence service implem. FAKE; ${BEANNAME}PersistenceFAKE.java; ${SRC}/${ROOT_PKG}/persistence/services/fake; persistence_service_fake.vm ; *

Persistence service JUnit test  ; ${BEANNAME}PersistenceTest.java; ${TEST_SRC}/${ROOT_PKG}/test/persistence    ; persistence_service_junit.vm ; *

#-----------------------------------------------------------------------------------------------------------------------------------------------------
# Environment classes for persistence services (to be generated just once)

# JPA
persistence.xml                ; persistence.xml                 ; ${RES}/META-INF                             ; env/persistence_xml.vm    ; 1

Persistence configuration      ; PersistenceConfig.java          ; ${SRC}/${ROOT_PKG}/persistence              ; env/PersistenceConfig.vm          ; 1
Persistence service provider   ; PersistenceServiceProvider.java ; ${SRC}/${ROOT_PKG}/persistence              ; env/PersistenceServiceProvider.vm ; 1

Mock values class              ; MockValues.java                 ; ${SRC}/${ROOT_PKG}/mock/tool                ; env/MockValues.vm         ; 1

FAKE generic service  class    ; GenericFakeService.java         ; ${SRC}/${ROOT_PKG}/persistence/commons/fake ; env/GenericFakeService.vm         ; 1

JPA environments class         ; JpaEnvironments.java            ; ${SRC}/${ROOT_PKG}/persistence/commons/jpa  ; env/JpaEnvironments.vm         ; 1
JPA environment class          ; JpaEnvironment.java             ; ${SRC}/${ROOT_PKG}/persistence/commons/jpa  ; env/JpaEnvironment.vm          ; 1
JPA operation interface        ; JpaOperation.java               ; ${SRC}/${ROOT_PKG}/persistence/commons/jpa  ; env/JpaOperation.vm            ; 1
JPA generic service class      ; GenericJpaService.java          ; ${SRC}/${ROOT_PKG}/persistence/commons/jpa  ; env/GenericJpaService.vm       ; 1

